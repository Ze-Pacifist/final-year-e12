services:

  vpn:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: vpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/IST
      - SERVERURL=vpn
      - SERVERPORT=51820
      - PEERS=${NO_OF_TEAMS}
      - PEERDNS=auto
      - INTERNAL_SUBNET=${SUBNET}
      - ALLOWEDIPS=${ALLOWEDIPS}
      - LOG_CONFS=true
    volumes:
      - ./vpn/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - team1_network
      - admin_network
    restart: unless-stopped

  service_controller:
    build:
      context: .
      dockerfile: service_controller/Dockerfile
    container_name: service_controller
    depends_on:
      - vpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      TICK_INTERVAL: 180
      NUM_TEAMS: ${NO_OF_TEAMS}
    networks:
      - admin_network
    volumes:
      - ./vpn/config/peer1/peer1.conf:/etc/wireguard/admin.conf
    ports:
      - "8080:8080"
    restart: unless-stopped

  team1:
    build:
      context: ./teams
      dockerfile: Dockerfile
    container_name: team1
    networks:
      - team1_network
    environment:
      TEAM_ID: 1
    restart: unless-stopped
    

networks:
  admin_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
  team1_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.11.0/24